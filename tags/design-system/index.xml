<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>design system on Ivan's blog</title><link>https://raqystyle.github.io/tags/design-system/</link><description>Recent content in design system on Ivan's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 28 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://raqystyle.github.io/tags/design-system/index.xml" rel="self" type="application/rss+xml"/><item><title>Design Systems as a layered cake</title><link>https://raqystyle.github.io/blog/layered-cake-ds/</link><pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate><guid>https://raqystyle.github.io/blog/layered-cake-ds/</guid><description>How do we structure a Design System? How do we make sure the architecture allows more people to contribute to it? What if there&amp;rsquo;s already a Design System in place, but it doesn&amp;rsquo;t work? During my time at Personio, I participated in the process of re-thinking the existing Design System. I noticed that dissecting the system into layers helped us answer some tricky questions. So, bear with me.
How it all starts In my experience, design systems always come after the main Product.</description></item></channel></rss>