<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>oop on Ivan's blog</title><link>https://ivan-demchenko.github.io/tags/oop/</link><description>Recent content in oop on Ivan's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 11 Mar 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://ivan-demchenko.github.io/tags/oop/index.xml" rel="self" type="application/rss+xml"/><item><title>Interfaces, good and bad</title><link>https://ivan-demchenko.github.io/blog/interfaces-good-bad/</link><pubDate>Sat, 11 Mar 2023 00:00:00 +0000</pubDate><guid>https://ivan-demchenko.github.io/blog/interfaces-good-bad/</guid><description>Designing applications can be a challenging task. Over the course of my career, I have developed a few guiding principles that I would like to share with you. These are more food for thought, rather than hard rules to follow.
Throughout this article, I use adjectives like &amp;ldquo;good&amp;rdquo; and &amp;ldquo;bad&amp;rdquo; - purely subjectively.
Why do we need interfaces? Public interfaces provide an overview of the capabilities of the module. If an interface and its methods have descriptive names (defined later), that interface can be a valuable addition to the documentation.</description></item></channel></rss>