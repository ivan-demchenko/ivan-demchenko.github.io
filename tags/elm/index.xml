<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>elm on Ivan's blog</title><link>https://ivan-demchenko.github.io/tags/elm/</link><description>Recent content in elm on Ivan's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 13 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://ivan-demchenko.github.io/tags/elm/index.xml" rel="self" type="application/rss+xml"/><item><title>Why I chose Elm for my side project</title><link>https://ivan-demchenko.github.io/blog/why-elm-is-language-of-choice/</link><pubDate>Sun, 13 Oct 2024 00:00:00 +0000</pubDate><guid>https://ivan-demchenko.github.io/blog/why-elm-is-language-of-choice/</guid><description>I built a browser extension using Elm - GoalMet - Achieve your goals. Even though Elm&amp;rsquo;s evolution is rather slow, the JS community can learn heaps from this wonderful language and its ecosystem. Here are the main reasons why I chose Elm for my side project.
Stable ecosystem Everything I learned about Elm 2-3 years ago still applies. Even though I used Elm for anything substantial around two years ago, I could jump in and be productive immediately.</description></item><item><title>Handle keyboard input in Elm</title><link>https://ivan-demchenko.github.io/blog/handle-keyboard-input-in-elm/</link><pubDate>Fri, 24 Nov 2017 00:00:00 +0000</pubDate><guid>https://ivan-demchenko.github.io/blog/handle-keyboard-input-in-elm/</guid><description>Often we need to perform certain actions as a feedback to the input from the keyboard. For example, when we need to navigate within a list up and down or perform an action when the meta key (alt or shift) is pressed.
Binding messages to keys The most natural and convenient way to specify which action must be performed when a key is pressed is to use a dictionary. We going to use a list of tuples of key codes plus messages.</description></item></channel></rss>