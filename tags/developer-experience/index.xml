<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>developer experience on Ivan's blog</title><link>https://ivan-demchenko.github.io/tags/developer-experience/</link><description>Recent content in developer experience on Ivan's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 15 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://ivan-demchenko.github.io/tags/developer-experience/index.xml" rel="self" type="application/rss+xml"/><item><title>Model errors as data for better user and developer experience</title><link>https://ivan-demchenko.github.io/blog/models-errors-as-data/</link><pubDate>Mon, 15 Jan 2024 00:00:00 +0000</pubDate><guid>https://ivan-demchenko.github.io/blog/models-errors-as-data/</guid><description>A great product experience is when the product works as expected in the scenario it was designed for, and communicates with users in a meaningful way. As developers, we cannot control how and where our product will be used, or the user input. But we have the tools to guard the flow from unexpected inputs. In this post, I want to give two pieces of advice for people working in the JS ecosystem on how to create better programs.</description></item></channel></rss>